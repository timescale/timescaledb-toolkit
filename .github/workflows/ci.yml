name: CI
on:
  pull_request:
  push:
    branches:
    - main
    - staging
    - trying
  schedule:
    # we build at 8am UTC, 3am Eastern, midnight Pacific
    - cron:  '0 8 * * 1-4'
  workflow_dispatch:

jobs:
  testpostgres:
    name: Test Postgres
    runs-on: ${{ matrix.runner }}
    container:
      image: timescaledev/rust-pgx:latest
    strategy:
      matrix:
        pgversion: [12, 13, 14]
        runner:
          - ubuntu-20.04
          - [self-hosted, Linux, ARM64]
    env:
      # Must keep in sync with `path: target` in cache entry below
      CARGO_TARGET_DIR_NAME: target
      # TODO Why?  Cargo default is to pass `-C incremental` to rustc; why don't we want that?
      #   https://doc.rust-lang.org/rustc/codegen-options/index.html#incremental
      #   Well turning it off takes the extension target size down from 3G to 2G...
      CARGO_INCREMENTAL: 0
      # TODO Why?  If we're concerned about trouble fetching crates, why not
      #  just fetch them once at the time we select a dependency?
      #  Errors fetching crates are probably rare enough that we don't see the
      #  need to bother, but then why not just let the build fail?
      CARGO_NET_RETRY: 10
      # TODO What reads this?  It's not listed on
      #  https://doc.rust-lang.org/cargo/reference/environment-variables.html
      CI: 1
      RUST_BACKTRACE: short
      # TODO We don't seem to run rustup, nor does it seem like we should.
      RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    # ~postgres/.pgx/config.toml comes in on the image.
    # Setting HOME=~postgres (which is /home/postgres) in cargo's environment
    # would work, but sticking with this approach for now.
    - name: chown Repository
      run: chown -R postgres .

    # CARGO_HOME is /usr/local/cargo which looks like something we'd need to
    # stay root to update, but the parts we need to update (.crates.toml,
    # .crates2.json, .package-cache, git, registry) are already owned by
    # `postgres` in the image.
    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          /usr/local/cargo/registry
          /usr/local/cargo/git
        key: ${{ runner.os }}-test-pg${{ matrix.pgversion }}-cargo-1.8
        restore-keys: ${{ runner.os }}-test-pg${{ matrix.pgversion }}-cargo-1.5

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-test-pg${{ matrix.pgversion }}-target-1.8
        restore-keys: ${{ runner.os }}-test-pg${{ matrix.pgversion }}-target-1.5

    - name: Run pgx tests
      run: su postgres -c 'sh tools/build -pg${{ matrix.pgversion }} test-extension 2>&1'

    # TODO post-install + doc test adds a good 90s.  We could probably put
    # them together run serially in a separate job to shave that 90s off the
    # long pole.
    - name: Run post-install tests
      run: su postgres -c 'sh tools/build -pg${{ matrix.pgversion }} test-post-install 2>&1'

    - name: Run doc tests
      run: su postgres -c 'sh tools/build -pg${{ matrix.pgversion }} test-doc 2>&1'

  testcrates:
    name: Test Crates
    runs-on: ubuntu-20.04
    container:
      image: timescaledev/rust-pgx:latest
      env:
        CARGO_TARGET_DIR_NAME: target
        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 10
        CI: 1
        RUST_BACKTRACE: short
        RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: chown Repository
      run: chown -R postgres .

    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          /usr/local/cargo/registry
          /usr/local/cargo/git
        key: ${{ runner.os }}-test-crates-cargo-1.8
        restore-keys: ${{ runner.os }}-test-crates-cargo-1.5

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-test-crates-target-1.8
        restore-keys: ${{ runner.os }}-test-crates-target-1.5

    - name: Run Crates Tests
      run: su postgres -c 'sh tools/build test-crates 2>&1'

  testupdates:
    name: Test Updates
    runs-on: ubuntu-20.04
    container:
      image: timescaledev/rust-pgx:latest
      env:
        PGVERSION: 14
        CARGO_TARGET_DIR_NAME: target

        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 10
        CI: 1
        RUST_BACKTRACE: short
        RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: chown Repository
      run: chown -R postgres .

    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          /usr/local/cargo/registry
          /usr/local/cargo/git
        key: ${{ runner.os }}-test-updates-cargo-1.8
        restore-keys: ${{ runner.os }}-test-crates-cargo-1.7

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-test-updates-target-1.8
        restore-keys: ${{ runner.os }}-test-crates-target-1.7

    - name: Cache old versions dir
      uses: actions/cache@v2
      with:
        path: old-versions
        key: ${{ runner.os }}-test-old-versions-1.8
        restore-keys: ${{ runner.os }}-test-old-versions-1.7

    - name: Run Update Tests
      run: su postgres -c 'sh tools/build -pg$PGVERSION -cargo-pgx /home/postgres/pgx/0.4/bin/cargo-pgx -cargo-pgx-old /home/postgres/pgx/0.2/bin/cargo-pgx test-updates 2>&1'
